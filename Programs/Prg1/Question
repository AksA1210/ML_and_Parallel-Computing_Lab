gcc -g -Wall -pthread yourcode.c -lpthread -o yourprogram
Q1: Write a C/C++ program to create a thread to print first n natural numbers.
Q2: Write a program in C/C++ to create a random integer array of size n and evaluate the performance in terms of execution time.

    1. Sequential program with functions
        i.  Find the sum of elements in an array
        ii. Search a key element in an array
    2. A thread based program to partition the array and perform computation in each thread.
        i.  Find the sum of elements in an array
        ii. Search a key element in an array



Plot N - 100,500,1000,2000,5000,10000  - execution time - variation
Thread - 1,2,3,4,5 (multiple)

Output should come as : 

Thread  1   2   3   4   5
Count 
100
1000
5000
10000

import os
import pytest
import sys
sys.path.append("C:/Users/cusat/task_5.py")
from task_5 import Downloader, download_images

def test_Downloader():
    # Initialize Downloader
    parquet_file = "C:/Users/cusat/Desktop/links.parquet"
    downloader = Downloader(parquet_file)
    assert len(downloader.urls) > 0

def test_download_images():
    # Test parameters
    parquet_file = "C:/Users/cusat/Desktop/links.parquet"
    output_directory = "C:/Users/cusat/test_output"
    max_images = 20 
    download_images(parquet_file, output_directory, max_images)
    assert os.path.isdir(output_directory)
    assert len(os.listdir(output_directory)) == max_images


if __name__ == "__main__":
    pytest.main([__file__])
